<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usaco on WHS Comp. Sci. Club</title>
    <link>https://whscompsciclub.github.io/usaco/</link>
    <description>Recent content in Usaco on WHS Comp. Sci. Club</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-NC-SA 4.0 | WHS CSC {year}</copyright>
    <lastBuildDate>Sun, 06 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://whscompsciclub.github.io/usaco/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intro to Sorting Algorithms</title>
      <link>https://whscompsciclub.github.io/usaco/intro-sort/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://whscompsciclub.github.io/usaco/intro-sort/</guid>
      <description>We use sorting algorithms to keep an array in order. Here is a list of common sorting algorithms. Beware: the first three are highly inefficient! (See Time Complexity )
Bubble Sort: $O(n^2)$  Set the first element as the current element. swap(current, next) if current &amp;gt; next, essentially moving it down the list Repeat last step.  if current &amp;lt; next: set next as the current element if current = end of list: set the first element as the current element   The array is sorted when no swaps occur in a single pass (from first to last).</description>
    </item>
    
    <item>
      <title>Brute Force</title>
      <link>https://whscompsciclub.github.io/usaco/brute-force/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 -0800</pubDate>
      
      <guid>https://whscompsciclub.github.io/usaco/brute-force/</guid>
      <description>What is Brute Forcing? A brute-force problem is exactly what it sounds like: simply doing everything possible to eventually reach the answer. Let&amp;rsquo;s say you were trying to achieve the password to someone&amp;rsquo;s phone (assume 4 digits from 0 to 9). A brute force solution would be to try every single password possible. This way, it is guaranteed that at one point, the answer would be correct.  Pros  Easy/Uncomplicated Guarantees a solution   Cons  Inefficient Not suitable for every problem    Brute Force in the USACO  It is almost guaranteed that there will be at least one brute force problem in a USACO Bronze contest, and sometimes there will be 2 (and rarely 3).</description>
    </item>
    
  </channel>
</rss>
